generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Address {
  id      Int     @id @default(autoincrement())
  user_id       String
  address_line1 String
  address_line2 String?
  city          String
  state         String
  postal_code   String
  country       String
  is_default    Boolean  @default(false)
  created_at    DateTime @default(now())
  user          User[]

  @@index([user_id], map: "Address_user_id_fkey")
}

model Adminactivity {
  id      Int     @id @default(autoincrement())
  admin_id      String
  activity_type String
  description   String?
  created_at    DateTime @default(now())
  admin         Admin[]

  @@index([admin_id], map: "AdminActivity_admin_id_fkey")
}

model Auth {
  id      Int     @id @default(autoincrement())
  user_id      String
  token        String
  is_logged_in Boolean   @default(false)
  last_login   DateTime?
  created_at   DateTime  @default(now())
  updated_at   DateTime
  user         User[]

  @@index([user_id], map: "Auth_user_id_fkey")
}

model Brand {
  id      Int     @id @default(autoincrement())
  name     String     @unique(map: "Brand_name_key")
  discount Discount[]
  product  Product[]
}

model Cart {
  id      Int     @id @default(autoincrement())
  user_id            String
  product_id         String
  quantity           Int             @default(1)
  shipping_method_id String?
  product            Product[]
  shippingmethod     Shippingmethod[]
  user               User[]

  @@index([product_id], map: "Cart_product_id_fkey")
  @@index([shipping_method_id], map: "Cart_shipping_method_id_fkey")
  @@index([user_id], map: "Cart_user_id_fkey")
}

model Category {
  id      Int     @id @default(autoincrement())
  name     String     @unique(map: "Category_name_key")
  discount Discount[]
  product  Product[]
}

model Collection {
  id      Int     @id @default(autoincrement())
  name              String              @unique(map: "Collection_name_key")
  description       String?
  created_at        DateTime            @default(now())
  productcollection Productcollection[]
}

model Contact {
  id      Int     @id @default(autoincrement())
  user_id    String
  message    String
  status     String   @default("open")
  created_at DateTime @default(now())
  user       User[]

  @@index([user_id], map: "Contact_user_id_fkey")
}

model Creditcard {
  id      Int     @id @default(autoincrement())
  user_id    String
  card_last4 String
  card_brand String
  token      String
  is_default Boolean   @default(false)
  created_at DateTime  @default(now())
  user       User[]
  payment    Payment[]

  @@index([user_id], map: "CreditCard_user_id_fkey")
}

model Discount {
  id            String    @id
  product_id    String?
  category_id   String?
  brand_id      String?
  code          String    @unique(map: "Discount_code_key")
  discount_type String
  value         Float
  start_date    DateTime?
  end_date      DateTime?
  created_at    DateTime  @default(now())
  brand         Brand[]
  category      Category[]
  product       Product[]

  @@index([brand_id], map: "Discount_brand_id_fkey")
  @@index([category_id], map: "Discount_category_id_fkey")
  @@index([product_id], map: "Discount_product_id_fkey")
}

model Notification {
  id      Int     @id @default(autoincrement())
  user_id    String
  message    String
  is_read    Boolean  @default(false)
  created_at DateTime @default(now())
  user       User[]

  @@index([user_id], map: "Notification_user_id_fkey")
}

model Order {
  id      Int     @id @default(autoincrement())
  user_id            String
  vendor_id          String?
  order_date         DateTime
  status             String
  payment_status     String               @default("unpaid")
  total_amount       Float
  payment_method     String
  shipping_address   String
  shipping_method_id String?
  created_at         DateTime             @default(now())
  shippingmethod     Shippingmethod[]
  user               User[]
  vendor             Vendor[]
  orderitem          Orderitem[]
  orderstatushistory Orderstatushistory[]
  payment            Payment[]
  vendororder        Vendororder[]

  @@index([shipping_method_id], map: "Order_shipping_method_id_fkey")
  @@index([user_id], map: "Order_user_id_fkey")
  @@index([vendor_id], map: "Order_vendor_id_fkey")
}

model Orderitem {
  id      Int     @id @default(autoincrement())
  order_id   String
  product_id String
  quantity   Int
  price      Float
  order      Order[]
  product    Product[]

  @@index([order_id], map: "OrderItem_order_id_fkey")
  @@index([product_id], map: "OrderItem_product_id_fkey")
}

model Orderstatushistory {
  id      Int     @id @default(autoincrement())
  order_id   String
  status     String
  changed_at DateTime @default(now())
  order      Order[]

  @@index([order_id], map: "OrderStatusHistory_order_id_fkey")
}

model Passwordchange {
  id      Int     @id @default(autoincrement())
  user_id      String
  old_password String
  new_password String
  changed_at   DateTime @default(now())
  user         User[]

  @@index([user_id], map: "PasswordChange_user_id_fkey")
}

model Payment {
  id      Int     @id @default(autoincrement())
  order_id        String
  user_id         String
  credit_card_id  String?
  payment_method  String
  payment_gateway String
  transaction_id  String?     @unique(map: "Payment_transaction_id_key")
  status          String      @default("pending")
  created_at      DateTime    @default(now())
  creditcard      Creditcard[]
  order           Order[]
  user            User[]

  @@index([credit_card_id], map: "Payment_credit_card_id_fkey")
  @@index([order_id], map: "Payment_order_id_fkey")
  @@index([user_id], map: "Payment_user_id_fkey")
}

model Permission {
  id      Int     @id @default(autoincrement())
  role       String
  can_view   Boolean  @default(false)
  can_edit   Boolean  @default(false)
  can_delete Boolean  @default(false)
  created_at DateTime @default(now())
  updated_at DateTime
}

model Product {
  id      Int     @id @default(autoincrement())
  name              String
  description       String?
  price             Float
  stock             Int                 @default(0)
  category_id       String
  brand_id          String
  is_new_arrival    Boolean             @default(false)
  is_best_seller    Boolean             @default(false)
  created_at        DateTime            @default(now())
  cart              Cart[]
  discount          Discount[]
  orderitem         Orderitem[]
  brand             Brand[]
  category          Category[]
  productcollection Productcollection[]
  productimage      Productimage[]
  productquestion   Productquestion[]
  productreview     Productreview[]
  vendorproduct     Vendorproduct[]
  wishlist          Wishlist[]

  @@index([brand_id], map: "Product_brand_id_fkey")
  @@index([category_id], map: "Product_category_id_fkey")
}

model Productcollection {
  id      Int     @id @default(autoincrement())
  product_id    String
  collection_id String
  created_at    DateTime   @default(now())
  collection    Collection[]
  product       Product[]

  @@index([collection_id], map: "ProductCollection_collection_id_fkey")
  @@index([product_id], map: "ProductCollection_product_id_fkey")
}

model Productimage {
  id      Int     @id @default(autoincrement())
  product_id String
  image_url  String
  is_primary Boolean  @default(false)
  created_at DateTime @default(now())
  product    Product[]

  @@index([product_id], map: "ProductImage_product_id_fkey")
}

model Productquestion {
  id      Int     @id @default(autoincrement())
  product_id String
  user_id    String
  question   String
  answer     String?
  created_at DateTime @default(now())
  product    Product[]
  user       User[]

  @@index([product_id], map: "ProductQuestion_product_id_fkey")
  @@index([user_id], map: "ProductQuestion_user_id_fkey")
}

model Productreview {
  id      Int     @id @default(autoincrement())
  product_id String
  user_id    String
  rating     Int
  comment    String?
  created_at DateTime @default(now())
  product    Product[]
  user       User[]

  @@index([product_id], map: "ProductReview_product_id_fkey")
  @@index([user_id], map: "ProductReview_user_id_fkey")
}

model Shippingmethod {
  id      Int     @id @default(autoincrement())
  name          String
  cost          Float
  delivery_time String
  created_at    DateTime @default(now())
  cart          Cart[]
  order         Order[]
}

model Role {
  id      Int     @id @default(autoincrement())
  name        String
  code        String   @unique
  description String?
  users       User[]
  admins      Admin[]
  vendors     Vendor[]
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model User {
  id      Int     @id @default(autoincrement())
  first_name      String
  last_name       String
  display_name    String
  email           String            @unique
  password        String
  role_id         Int
  status          String            @default("active")
  created_at      DateTime          @default(now())
  updated_at      DateTime
  deleted_at      DateTime?
  address         Address[]
  admin           Admin[]
  auth            Auth[]
  cart            Cart[]
  contact         Contact[]
  creditcard      Creditcard[]
  notification    Notification[]
  order           Order[]
  passwordchange  Passwordchange[]
  payment         Payment[]
  productquestion Productquestion[]
  productreview   Productreview[]
  role            Role[]
  vendor          Vendor[]
  wishlist        Wishlist[]
}

model Admin {
  id      Int     @id @default(autoincrement())
  user_id       Int          @unique
  role_id       String
  created_at    DateTime        @default(now())
  updated_at    DateTime
  user          User[] 
  role          Role[]
  adminactivity Adminactivity[]
}

model Vendor {
  id      Int     @id @default(autoincrement())
  user_id        Int          @unique
  role_id        String
  business_name  String
  business_email String          @unique
  business_phone String
  status         String          @default("pending")
  created_at     DateTime        @default(now())
  updated_at     DateTime
  order          Order[]
  user           User[]
  role           Role[]
  vendorevent    Vendorevent[]
  vendororder    Vendororder[]
  vendorproduct  Vendorproduct[]
}


model Vendorevent {
  id      Int     @id @default(autoincrement())
  vendor_id    String
  event_name   String
  event_poster String?
  start_date   DateTime
  end_date     DateTime
  created_at   DateTime @default(now())
  vendor       Vendor[]

  @@index([vendor_id], map: "VendorEvent_vendor_id_fkey")
}

model Vendororder {
  id      Int     @id @default(autoincrement())
  vendor_id     String
  order_id      String
  status        String   @default("pending")
  vendor_amount Float
  created_at    DateTime @default(now())
  updated_at    DateTime
  order         Order[]
  vendor        Vendor[]

  @@index([order_id], map: "VendorOrder_order_id_fkey")
  @@index([vendor_id], map: "VendorOrder_vendor_id_fkey")
}

model Vendorproduct {
  id      Int     @id @default(autoincrement())
  vendor_id  String
  product_id String
  created_at DateTime @default(now())
  product    Product[]
  vendor     Vendor[]

  @@index([product_id], map: "VendorProduct_product_id_fkey")
  @@index([vendor_id], map: "VendorProduct_vendor_id_fkey")
}

model Wishlist {
  id      Int     @id @default(autoincrement())
  user_id    String
  product_id String
  created_at DateTime @default(now())
  product    Product[]
  user       User[]

  @@index([product_id], map: "Wishlist_product_id_fkey")
  @@index([user_id], map: "Wishlist_user_id_fkey")
}
